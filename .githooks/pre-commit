#!/bin/bash

# Pre-commit hook to enforce project conventions

# Color codes for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Running pre-commit checks...${NC}"
echo ""

# Check if GIT_HISTORY.md has been modified
if git diff --cached --name-only | grep -q "GIT_HISTORY.md"; then
    echo -e "${GREEN}✓ GIT_HISTORY.md has been updated${NC}"
else
    echo -e "${RED}❌ ERROR: GIT_HISTORY.md has not been updated${NC}"
    echo -e "${YELLOW}   You must update the git history before committing!${NC}"
    echo ""
    echo -e "${YELLOW}Please add this commit to GIT_HISTORY.md with:${NC}"
    echo -e "  - Commit hash (will be generated after commit)"
    echo -e "  - Commit type and description"
    echo -e "  - Detailed bullet points of changes"
    echo ""
    echo -e "${RED}Commit aborted. Please update GIT_HISTORY.md first.${NC}"
    exit 1
fi



# Reminder about conventional commits (actual validation happens in commit-msg hook)
echo ""
echo -e "${BLUE}📝 Remember: Use conventional commit format${NC}"
echo -e "   ${GREEN}Examples: feat:, fix:, docs:, refactor:, chore:${NC}"
echo ""

# Run linting if available
if command -v pnpm &> /dev/null; then
    echo "Running lint checks..."
    pnpm lint:fix 2>/dev/null || true
fi

echo ""
echo -e "${GREEN}✓ Pre-commit checks complete${NC}"
exit 0