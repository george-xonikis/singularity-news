export interface Article {
  id: string; // UUID from database
  title: string;
  slug: string;
  content: string;
  summary?: string;
  author?: string;
  topics: string[];
  coverPhoto?: string;
  coverPhotoCaption?: string;
  tags: string[];
  createdAt: string;
  updatedAt: string;
  publishedDate?: string | null;
  views: number;
  published: boolean;
}

// Fields that are auto-generated and should not be provided by the user
type AutoGeneratedFields = 'id' | 'views' | 'createdAt' | 'updatedAt';

// Fields that are required when creating an article
type RequiredCreateFields = 'title' | 'content' | 'topics' | 'tags';

// Fields that are optional when creating an article
type OptionalCreateFields = 'slug' | 'summary' | 'author' | 'coverPhoto' | 'coverPhotoCaption' | 'published' | 'publishedDate';

// CreateArticleInput: Required fields + optional fields from Article
export type CreateArticleInput = 
  Pick<Article, RequiredCreateFields> & 
  Partial<Pick<Article, OptionalCreateFields>>;

// UpdateArticleInput: All user-editable fields are optional
export type UpdateArticleInput = Partial<Omit<Article, AutoGeneratedFields>>;

// ArticleFilters: Common interface for filtering articles across frontend and backend
export interface ArticleFilters {
  search?: string;
  topics?: string[];
  published?: boolean;
  minViews?: number;
  maxViews?: number;
  startDate?: string;
  endDate?: string;
  limit?: number;
  offset?: number;
  sortBy?: string;
  sortOrder?: 'ASC' | 'DESC';
}